{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/components/modal.js","webpack://mesto-project-ff/./src/scripts/components/cards.js","webpack://mesto-project-ff/./src/scripts/components/validation.js","webpack://mesto-project-ff/./src/scripts/components/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["function handleEscape (evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const popupIsOpened = document.querySelector(\".popup_is-opened\");\r\n    closePopup(popupIsOpened);\r\n  }\r\n}\r\n\r\n//Открытие попапа\r\nfunction openPopup (popup) {\r\n  popup.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", handleEscape);\r\n}\r\n\r\n//Закрытие попапа\r\nfunction closePopup (popup) {\r\n  popup.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", handleEscape);\r\n}\r\n\r\nexport {openPopup, closePopup};","function createCard(cardData, userId, onDeleteCard, likeBtnHandler, clickImageHandler) {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const cardElement = cardTemplate.querySelector(\".card\");\r\n  const cardCopy = cardElement.cloneNode(true);\r\n  const buttonDelete = cardCopy.querySelector(\".card__delete-button\");\r\n  const cardCopyImage = cardCopy.querySelector(\".card__image\");\r\n  const likeBtn = cardCopy.querySelector(\".card__like-button\");\r\n  const likeCounter = cardCopy.querySelector(\".card__like-counter\");\r\n\r\n  cardCopyImage.src = cardData.link;\r\n  cardCopyImage.alt = cardData.name;\r\n  cardCopy.querySelector(\".card__title\").textContent = cardData.name;\r\n  likeCounter.textContent = cardData.likes.length;\r\n\r\n  if (userId === cardData.owner._id) {\r\n    buttonDelete.addEventListener(\"click\", () => {\r\n      onDeleteCard(cardCopy);\r\n    });\r\n  } else {\r\n    buttonDelete.remove()\r\n  }\r\n\r\n  if (cardData.likes.some((like) => like._id === userId)){\r\n    toggleLikeState(likeBtn);\r\n  }\r\n  likeBtn.addEventListener(\"click\", () => {\r\n    likeBtnHandler(likeBtn, likeCounter);\r\n  });\r\n\r\n  cardCopyImage.addEventListener('click', clickImageHandler);\r\n\r\n  return cardCopy;\r\n}\r\n\r\n// Функция удаления карточки из разметки\r\nfunction  deleteCardFromDOM (card) {\r\n  card.remove();\r\n}\r\n\r\n//Обработчик лайка\r\nfunction toggleLikeState (likeBtn) {\r\n  likeBtn.classList.toggle(\"card__like-button_is-active\");\r\n}\r\n\r\nexport {createCard, deleteCardFromDOM, toggleLikeState};","function showInputError (formElement, inputElement, errorMessage, validationConfig) {\r\n  const errorElement = formElement.querySelector(`${validationConfig.inputErrorTypeClass}${inputElement.name}`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n}\r\n\r\nfunction hideInputError (formElement, inputElement, validationConfig) {\r\n  const errorElement = formElement.querySelector(`${validationConfig.inputErrorTypeClass}${inputElement.name}`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.textContent = '';\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n}\r\n\r\nfunction checkInputValidity (formElement, inputElement, validationConfig) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n}\r\n\r\nfunction hasInvalidInput (inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  })\r\n}\r\n\r\nfunction toggleButtonState (inputList, buttonElement, validationConfig) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n}\r\n\r\nfunction setEventListeners (formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}\r\n\r\nfunction clearValidation (formElement, validationConfig) {\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  });\r\n  buttonElement.disabled = true;\r\n  buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n}\r\n\r\nfunction enableValidation (validationConfig) {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n  })\r\n}\r\n\r\nexport {showInputError, hideInputError, checkInputValidity, hasInvalidInput, toggleButtonState, setEventListeners, clearValidation, enableValidation};","const config = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-10',\r\n  headers: {\r\n    authorization: '459f3f15-9abd-42cb-bef4-24dbba45bbab',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nfunction getUserInfo () {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  })\r\n}\r\n\r\nfunction getInitialCards () {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Не удается получить карточки`);\r\n  })\r\n}\r\n\r\nfunction sendProfileChanges (newName, newDescription) {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: newName,\r\n      about: newDescription\r\n    })\r\n  })\r\n  .then((res) => {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Изменения не сохранены! Ошибка: ${res.status}`);\r\n    }\r\n  })\r\n}\r\n\r\nfunction changeAvatar (avatar) {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar\r\n    })\r\n  })\r\n  .then((res) => {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Изменения не сохранены! Ошибка: ${res.status}`);\r\n    } else {\r\n      return res.json();\r\n    }\r\n  })\r\n}\r\n\r\nfunction postNewCard (cardData) {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: cardData.name,\r\n      link: cardData.link\r\n    })\r\n  })\r\n  .then((res) => {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка при добавлении карточки: ${res.status}`);\r\n    } else {\r\n      return res.json();\r\n    }\r\n  })\r\n}\r\n\r\nfunction deleteCard (cardId) {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    if(!res.ok) {\r\n      return Promise.reject(`Не удалось удалить карточку: ${res.status}`);\r\n    }\r\n  })\r\n}\r\n\r\nfunction likeCard (cardId) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    if(!res.ok) {\r\n      return Promise.reject(`Не удалось лайкнуть карточку: ${res.status}`);\r\n    } else {\r\n      return res.json();\r\n    }\r\n})\r\n}\r\n\r\nfunction dislikeCard (cardId) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    if(!res.ok) {\r\n      return Promise.reject(`Не удалось убрать лайк: ${res.status}`);\r\n    } else {\r\n      return res.json();\r\n    }\r\n  })\r\n}\r\n\r\nexport {config, getUserInfo, getInitialCards, sendProfileChanges, postNewCard, deleteCard, likeCard, dislikeCard, changeAvatar};","import '../pages/index.css';\r\nimport {openPopup, closePopup} from './components/modal.js';\r\nimport {createCard, deleteCardFromDOM, toggleLikeState} from './components/cards.js';\r\nimport {showInputError, hideInputError, checkInputValidity, hasInvalidInput, toggleButtonState, setEventListeners, clearValidation, enableValidation} from './components/validation.js';\r\nimport {config, getUserInfo, getInitialCards, sendProfileChanges, postNewCard, deleteCard, likeCard, dislikeCard, changeAvatar} from './components/api.js';\r\n\r\nconst cardsContainer = document.querySelector(\".places__list\");\r\nconst profileEditBtn = document.querySelector(\".profile__edit-button\");\r\nconst popupEditProfile = document.querySelector(\".popup_type_edit\");\r\nconst profileName = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileAvatar = document.querySelector(\".profile__image\");\r\nconst editProfileForm = document.forms[\"edit-profile\"];\r\nconst newPlaceForm = document.forms[\"new-place\"];\r\nconst cardAddBtn = document.querySelector(\".profile__add-button\");\r\nconst popupAddCard = document.querySelector(\".popup_type_new-card\");\r\nconst popups = Array.from(document.querySelectorAll(\".popup\"));\r\nconst popupImage = document.querySelector(\".popup_type_image\");\r\nconst image = popupImage.querySelector(\".popup__image\");\r\nconst caption = popupImage.querySelector(\".popup__caption\");\r\nconst popupConfirm = document.querySelector(\".popup_type_confirm\");\r\nconst popupConfirmForm = popupConfirm.querySelector(\".popup__form\");\r\nconst avatarEditBtn = document.querySelector(\".profile__image-edit-button\");\r\nconst popupNewAvatar = document.querySelector(\".popup_type_new-avatar\");\r\nconst newAvatarForm = popupNewAvatar.querySelector(\".popup__form\");\r\nlet userCache = {};\r\nlet cardCache = {};\r\n\r\n//Обработчик закрытия попапов\r\npopups.forEach((popup) => {\r\n  popup.addEventListener('mousedown', (evt) => {\r\n    if (evt.target.classList.contains(\"popup_is-opened\")) {\r\n      closePopup(popup);\r\n    }\r\n    if (evt.target.classList.contains(\"popup__close\")) {\r\n      closePopup(popup);\r\n    }\r\n  })\r\n})\r\n\r\nfunction loading (form, isLoading, message) {\r\n  if (isLoading) {\r\n    form.querySelector(\".popup__button\").textContent = message;\r\n  } else {\r\n    form.querySelector(\".popup__button\").textContent = message;\r\n  }\r\n} \r\n\r\n//Открытие/закрытие попапа редактирования профиля\r\nprofileEditBtn.addEventListener('click', () => {\r\n  openPopup(popupEditProfile);\r\n  clearValidation(editProfileForm, {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_inactive',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    inputErrorTypeClass: '.popup__input-error_type_',\r\n    errorClass: 'popup__input-error_active'\r\n  });\r\n  editProfileForm.elements.name.value = profileName.textContent;\r\n  editProfileForm.elements.description.value = profileDescription.textContent;\r\n})\r\n\r\n//Попап редактирования аватарки\r\navatarEditBtn.addEventListener('click', () => {\r\n  openPopup(popupNewAvatar);\r\n  newAvatarForm.reset();\r\n  clearValidation(newAvatarForm, {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_inactive',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    inputErrorTypeClass: '.popup__input-error_type_',\r\n    errorClass: 'popup__input-error_active'\r\n  });\r\n})\r\n\r\n//Обработчик изменения аватарки\r\nnewAvatarForm.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  loading(newAvatarForm, true, 'Сохранение...');\r\n  changeAvatar(newAvatarForm.elements.avatar.value)\r\n  .then((res) => {\r\n    profileAvatar.style = `background-image: url(${res.avatar})`;\r\n    closePopup(popupNewAvatar);\r\n  })\r\n  .catch((err) => {\r\n    alert(err);\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    loading(newAvatarForm, false, 'Сохранить');\r\n  })\r\n})\r\n\r\n//Обработчик подтверждения удаления\r\npopupConfirmForm.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  loading(popupConfirmForm, true, 'Удаляется...');\r\n  deleteCard(cardCache._id)\r\n  .then(() => {\r\n    deleteCardFromDOM(cardCache.cardCopy);\r\n  })\r\n  .then(() => {\r\n    closePopup(popupConfirm);\r\n  })\r\n  .catch((err) => {\r\n    alert(err);\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    loading(popupConfirmForm, false, 'Да');\r\n  })\r\n})\r\n\r\n//Рендер карточки\r\nfunction renderCard (cardData, userId) {\r\n  cardsContainer.prepend(\r\n    createCard(\r\n      cardData,\r\n      userId,\r\n      (cardCopy) => {\r\n        cardCache._id = cardData._id;\r\n        cardCache.cardCopy = cardCopy;\r\n        openPopup(popupConfirm);\r\n      },\r\n      (likeBtn, likeCounter) => {\r\n        if (!likeBtn.classList.contains(\"card__like-button_is-active\")) {\r\n          likeCard(cardData._id)\r\n          .then((res) => {\r\n            likeCounter.textContent = res.likes.length;\r\n            toggleLikeState(likeBtn);\r\n          })\r\n          .catch((err) => {\r\n            alert(err);\r\n            console.log(err);\r\n          });\r\n        } else {\r\n          dislikeCard(cardData._id)\r\n          .then ((res) => {\r\n            likeCounter.textContent = res.likes.length;\r\n            toggleLikeState(likeBtn);\r\n          })\r\n          .catch((err) => {\r\n            alert(err);\r\n            console.log(err);\r\n          });\r\n        }\r\n        },\r\n        clickImageHandler\r\n    )\r\n  );\r\n}\r\n\r\n//Сабмит изменений в профиле\r\nfunction handleEditSubmit(evt) {\r\n  evt.preventDefault();\r\n  loading(editProfileForm, true, 'Сохранение...');\r\n  profileName.textContent = editProfileForm.elements.name.value;\r\n  profileDescription.textContent = editProfileForm.elements.description.value;\r\n  sendProfileChanges(profileName.textContent, profileDescription.textContent)\r\n  .catch((err) => {\r\n    alert(err);\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    loading(editProfileForm, false, 'Сохранить');\r\n  })\r\n  closePopup(popupEditProfile);\r\n}\r\n\r\neditProfileForm.addEventListener('submit', handleEditSubmit);\r\n\r\n//Открытие/закрытие попапа добавления карточки\r\ncardAddBtn.addEventListener('click', () => {\r\n  openPopup(popupAddCard);\r\n  clearValidation(newPlaceForm, {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_inactive',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    inputErrorTypeClass: '.popup__input-error_type_',\r\n    errorClass: 'popup__input-error_active'\r\n  });\r\n  newPlaceForm.reset();\r\n})\r\n\r\n//Сабмит новой карточки\r\nfunction submitNewCard (evt) {\r\n  evt.preventDefault();\r\n  loading(newPlaceForm, true, 'Сохранение...');\r\n  let cardData = {};\r\n  cardData.name = newPlaceForm.elements[\"place-name\"].value;\r\n  cardData.link = newPlaceForm.elements.link.value;\r\n  postNewCard(cardData)\r\n  .then((card) => {\r\n    renderCard(card, userCache.id);\r\n  })\r\n  .catch((err) => {\r\n    alert(err);\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    loading(newPlaceForm, false, 'Сохранить');\r\n  })\r\n  closePopup(popupAddCard);\r\n  clearValidation(newPlaceForm, {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_inactive',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    inputErrorTypeClass: '.popup__input-error_type_',\r\n    errorClass: 'popup__input-error_active'\r\n  });\r\n  newPlaceForm.reset();\r\n}\r\n\r\nnewPlaceForm.addEventListener('submit', submitNewCard);\r\n\r\n//Обработчик клика по изображению\r\nfunction clickImageHandler(evt) {\r\n  openPopup(popupImage);\r\n  image.src = evt.target.src;\r\n  image.alt = evt.target.alt;\r\n  caption.textContent = evt.target.alt;\r\n}\r\n\r\nenableValidation({\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_inactive',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  inputErrorTypeClass: '.popup__input-error_type_',\r\n  errorClass: 'popup__input-error_active'\r\n});\r\n\r\nfunction renderUserInfo (userName, userAbout, userAvatar, userData) {\r\n  userName.textContent = userData.name;\r\n  userAbout.textContent = userData.about;\r\n  userAvatar.style = `background-image: url(${userData.avatar})`;\r\n}\r\n\r\nfunction renderInitialCards (cardsList, userId) {\r\n  cardsList.reverse().forEach((card) => {\r\n    renderCard(card, userId);\r\n  })\r\n}\r\n\r\nPromise.all([getUserInfo(), getInitialCards()])\r\n.then(([userData, cards]) => {\r\n  userCache.id = userData._id;\r\n  renderUserInfo(profileName, profileDescription, profileAvatar, userData);\r\n  renderInitialCards(cards, userData._id);\r\n})\r\n.catch((err) => {\r\n  alert(err);\r\n  console.log(err);\r\n});"],"names":["handleEscape","evt","key","closePopup","document","querySelector","openPopup","popup","classList","add","addEventListener","remove","removeEventListener","toggleLikeState","likeBtn","toggle","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","inputErrorTypeClass","name","inputErrorClass","textContent","errorClass","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","submitButtonSelector","Array","from","querySelectorAll","inputSelector","forEach","config","baseUrl","headers","authorization","cardsContainer","profileEditBtn","popupEditProfile","profileName","profileDescription","profileAvatar","editProfileForm","forms","newPlaceForm","cardAddBtn","popupAddCard","popups","popupImage","image","caption","popupConfirm","popupConfirmForm","avatarEditBtn","popupNewAvatar","newAvatarForm","userCache","cardCache","loading","form","isLoading","message","renderCard","cardData","userId","prepend","onDeleteCard","likeBtnHandler","clickImageHandler","cardCopy","content","cloneNode","buttonDelete","cardCopyImage","likeCounter","src","link","alt","likes","length","owner","_id","like","createCard","cardId","contains","fetch","method","then","res","ok","json","Promise","reject","status","dislikeCard","catch","err","alert","console","log","target","formSelector","elements","value","description","reset","avatar","preventDefault","body","JSON","stringify","style","finally","newName","newDescription","about","postNewCard","card","id","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","all","_ref","cardsList","_ref2","userData","cards","userName","userAbout","userAvatar","renderUserInfo","reverse"],"sourceRoot":""}