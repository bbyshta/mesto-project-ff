{"version":3,"file":"main.js","mappings":"mBAAA,SAASA,EAAcC,GACL,WAAZA,EAAIC,KAENC,EADsBC,SAASC,cAAc,oBAGjD,CAGA,SAASC,EAAWC,GAClBA,EAAMC,UAAUC,IAAI,mBACpBL,SAASM,iBAAiB,UAAWV,EACvC,CAGA,SAASG,EAAYI,GACnBA,EAAMC,UAAUG,OAAO,mBACvBP,SAASQ,oBAAoB,UAAWZ,EAC1C,CCsBA,SAASa,EAAiBC,GACxBA,EAAQN,UAAUO,OAAO,8BAC3B,CClCA,SAASC,EAAgBC,EAAaC,EAAcC,GAClD,IAAMC,EAAeH,EAAYZ,cAAc,GAADgB,OAAIF,EAAiBG,qBAAmBD,OAAGH,EAAaK,OACtGL,EAAaV,UAAUG,OAAOQ,EAAiBK,iBAC/CJ,EAAaK,YAAc,GAC3BL,EAAaZ,UAAUG,OAAOQ,EAAiBO,WACjD,CAsBA,SAASC,EAAmBC,EAAWC,EAAeV,IANtD,SAA0BS,GACxB,OAAOA,EAAUE,MAAK,SAACZ,GACrB,OAAQA,EAAaa,SAASC,KAChC,GACF,CAGMC,CAAgBL,IAIlBC,EAAcK,UAAW,EACzBL,EAAcrB,UAAUG,OAAOQ,EAAiBgB,uBAJhDN,EAAcK,UAAW,EACzBL,EAAcrB,UAAUC,IAAIU,EAAiBgB,qBAKjD,CAcA,SAASC,EAAiBnB,EAAaE,GACrC,IAAMU,EAAgBZ,EAAYZ,cAAcc,EAAiBkB,sBAC/CC,MAAMC,KAAKtB,EAAYuB,iBAAiBrB,EAAiBsB,gBACjEC,SAAQ,SAACxB,GACjBF,EAAeC,EAAaC,EAAcC,EAC5C,IACAU,EAAcK,UAAW,EACzBL,EAAcrB,UAAUC,IAAIU,EAAiBgB,oBAC/C,CChEA,IAAMQ,EAAS,CACbC,QAAS,kDACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAIpB,SAASC,EAAgBC,GACvB,OAAIA,EAAIC,GACED,EAAIE,OAELC,QAAQC,OAAO,WAAD/B,OAAY2B,EAAIK,QAEzC,CCdA,SAASC,EAAeC,EAAMC,EAAWC,GAErCF,EAAKlD,cAAc,kBAAkBoB,YAAcgC,CAIvD,C,0GCCA,IAAMC,EAAetD,SAASC,cAAc,kBAAkBsD,QACxDC,EAAiBxD,SAASC,cAAc,iBACxCwD,EAAiBzD,SAASC,cAAc,yBACxCyD,EAAmB1D,SAASC,cAAc,oBAC1C0D,EAAc3D,SAASC,cAAc,mBACrC2D,EAAqB5D,SAASC,cAAc,yBAC5C4D,EAAgB7D,SAASC,cAAc,mBACvC6D,EAAkB9D,SAAS+D,MAAM,gBACjCC,EAAehE,SAAS+D,MAAM,aAC9BE,EAAajE,SAASC,cAAc,wBACpCiE,EAAelE,SAASC,cAAc,wBACtCkE,EAASjC,MAAMC,KAAKnC,SAASoC,iBAAiB,WAC9CgC,EAAapE,SAASC,cAAc,qBACpCoE,EAAQD,EAAWnE,cAAc,iBACjCqE,EAAUF,EAAWnE,cAAc,mBACnCsE,EAAevE,SAASC,cAAc,uBACtCuE,EAAmBD,EAAatE,cAAc,gBAC9CwE,EAAgBzE,SAASC,cAAc,+BACvCyE,EAAiB1E,SAASC,cAAc,0BACxC0E,EAAgBD,EAAezE,cAAc,gBAC7Cc,EAAmB,CACvB6D,aAAc,eACdvC,cAAe,gBACfJ,qBAAsB,iBACtBF,oBAAqB,yBACrBX,gBAAiB,0BACjBF,oBAAqB,4BACrBI,WAAY,6BAEVuD,EAAY,CAAC,EACbC,EAAY,CAAC,EAoEjB,SAASC,EAAYC,EAAUC,GAC7BzB,EAAe0B,QJ1GjB,SAAoB5B,EAAc0B,EAAUC,EAAQE,EAAcC,EAAgBC,GAChF,IACMC,EADchC,EAAarD,cAAc,SAClBsF,WAAU,GACjCC,EAAeF,EAASrF,cAAc,wBACtCwF,EAAgBH,EAASrF,cAAc,gBACvCS,EAAU4E,EAASrF,cAAc,sBACjCyF,EAAcJ,EAASrF,cAAc,uBAwB3C,OAtBAwF,EAAcE,IAAMX,EAASY,KAC7BH,EAAcI,IAAMb,EAAS7D,KAC7BmE,EAASrF,cAAc,gBAAgBoB,YAAc2D,EAAS7D,KAC9DuE,EAAYrE,YAAc2D,EAASc,MAAMC,OAErCd,IAAWD,EAASgB,MAAMC,IAC5BT,EAAalF,iBAAiB,SAAS,WACrC6E,EAAaG,EACf,IAEAE,EAAajF,SAGXyE,EAASc,MAAMpE,MAAK,SAACwE,GAAI,OAAKA,EAAKD,MAAQhB,CAAM,KACnDxE,EAAgBC,GAElBA,EAAQJ,iBAAiB,SAAS,WAChC8E,EAAe1E,EAASgF,EAC1B,IAEAD,EAAcnF,iBAAiB,QAAS+E,GAEjCC,CACT,CI4EIa,CACE7C,EACA0B,EACAC,GACA,SAACK,GACCR,EAAUmB,IAAMjB,EAASiB,IACzBnB,EAAUQ,SAAWA,EACrBpF,EAAUqE,EACZ,IACA,SAAC7D,EAASgF,GF/BhB,IAAmBU,EEgCN1F,EAAQN,UAAUiG,SAAS,+BFtBxC,SAAsBD,GACpB,OAAOE,MAAM,GAADrF,OAAIsB,EAAOC,QAAO,iBAAAvB,OAAgBmF,GAAU,CACtDG,OAAQ,SACR9D,QAASF,EAAOE,UAEjB+D,MAAK,SAAC5D,GACL,OAAOD,EAAeC,EACxB,GACF,CEyBU6D,CAAYzB,EAASiB,KACpBO,MAAM,SAAC5D,GACN8C,EAAYrE,YAAcuB,EAAIkD,MAAMC,OACpCtF,EAAgBC,EAClB,IACCgG,OAAM,SAACC,GACNC,MAAMD,GACNE,QAAQC,IAAIH,EACd,KFnDSP,EEiCApB,EAASiB,IFhCnBK,MAAM,GAADrF,OAAIsB,EAAOC,QAAO,iBAAAvB,OAAgBmF,GAAU,CACtDG,OAAQ,MACR9D,QAASF,EAAOE,UAEjB+D,MAAK,SAAC5D,GACL,OAAOD,EAAeC,EACxB,KE2BS4D,MAAK,SAAC5D,GACL8C,EAAYrE,YAAcuB,EAAIkD,MAAMC,OACpCtF,EAAgBC,EAClB,IACCgG,OAAM,SAACC,GACNC,MAAMD,GACNE,QAAQC,IAAIH,EACd,GAYF,GACAtB,GAGR,CAsDA,SAASA,EAAkBxF,GACzBK,EAAUkE,GACVC,EAAMsB,IAAM9F,EAAIkH,OAAOpB,IACvBtB,EAAMwB,IAAMhG,EAAIkH,OAAOlB,IACvBvB,EAAQjD,YAAcxB,EAAIkH,OAAOlB,GACnC,CAjKA1B,EAAO7B,SAAQ,SAACnC,GACdA,EAAMG,iBAAiB,aAAa,SAACT,GAC/BA,EAAIkH,OAAO3G,UAAUiG,SAAS,oBAChCtG,EAAWI,GAETN,EAAIkH,OAAO3G,UAAUiG,SAAS,iBAChCtG,EAAWI,EAEf,GACF,IAGAsD,EAAenD,iBAAiB,SAAS,WACvCJ,EAAUwD,GACV1B,EAAgB8B,EAAiB/C,GACjC+C,EAAgBkD,SAAS7F,KAAK8F,MAAQtD,EAAYtC,YAClDyC,EAAgBkD,SAASE,YAAYD,MAAQrD,EAAmBvC,WAClE,IAGAoD,EAAcnE,iBAAiB,SAAS,WACtCJ,EAAUwE,GACVC,EAAcwC,QACdnF,EAAgB2C,EAAe5D,EACjC,IAGA4D,EAAcrE,iBAAiB,UAAU,SAACT,GFnB1C,IAAuBuH,EEoBrBvH,EAAIwH,iBACJnE,EAAcyB,EAAe,EAAM,kBFrBdyC,EEsBRzC,EAAcqC,SAASI,OAAOH,MFrBpCX,MAAM,GAADrF,OAAIsB,EAAOC,QAAO,oBAAoB,CAChD+D,OAAQ,QACR9D,QAASF,EAAOE,QAChB6E,KAAMC,KAAKC,UAAU,CACnBJ,OAAQA,MAGXZ,MAAK,SAAC5D,GACL,OAAOD,EAAeC,EACxB,KEaC4D,MAAK,SAAC5D,GACLiB,EAAc4D,MAAQ,yBAAHxG,OAA4B2B,EAAIwE,OAAM,KACzDrH,EAAW2E,EACb,IACCgC,OAAM,SAACC,GACNC,MAAMD,GACNE,QAAQC,IAAIH,EACd,IACCe,SAAQ,WACPxE,EAAcyB,EAAe,EAAO,YACtC,GACF,IAGAH,EAAiBlE,iBAAiB,UAAU,SAACT,GFV7C,IAAqBuG,EEWnBvG,EAAIwH,iBACJnE,EAAcsB,EAAkB,EAAM,iBFZnB4B,EEaRtB,EAAUmB,IFZdK,MAAM,GAADrF,OAAIsB,EAAOC,QAAO,WAAAvB,OAAUmF,GAAU,CAChDG,OAAQ,SACR9D,QAASF,EAAOE,UAEjB+D,MAAK,SAAC5D,GACL,OAAOD,EAAeC,EACxB,KEOC4D,MAAK,WACc1B,EAAUQ,SJvDzB/E,QIwDL,IACCiG,MAAK,WACJzG,EAAWwE,EACb,IACCmC,OAAM,SAACC,GACNC,MAAMD,GACNE,QAAQC,IAAIH,EACd,IACCe,SAAQ,WACPxE,EAAcsB,EAAkB,EAAO,KACzC,GACF,IA6DAV,EAAgBxD,iBAAiB,UAlBjC,SAA0BT,GF/G1B,IAA6B8H,EAASC,EEgHpC/H,EAAIwH,iBACJnE,EAAcY,EAAiB,EAAM,kBFjHV6D,EEkHR7D,EAAgBkD,SAAS7F,KAAK8F,MFlHbW,EEkHoB9D,EAAgBkD,SAASE,YAAYD,MFjHtFX,MAAM,GAADrF,OAAIsB,EAAOC,QAAO,aAAa,CACzC+D,OAAQ,QACR9D,QAASF,EAAOE,QAChB6E,KAAMC,KAAKC,UAAU,CACnBrG,KAAMwG,EACNE,MAAOD,MAGVpB,MAAK,SAAC5D,GACL,OAAOD,EAAeC,EACxB,KEwGC4D,MAAK,WACJ7C,EAAYtC,YAAcyC,EAAgBkD,SAAS7F,KAAK8F,MACxDrD,EAAmBvC,YAAcyC,EAAgBkD,SAASE,YAAYD,MACtElH,EAAW2D,EACb,IACCgD,OAAM,SAACC,GACNC,MAAMD,GACNE,QAAQC,IAAIH,EACd,IACCe,SAAQ,WACPxE,EAAcY,EAAiB,EAAO,YACxC,GACF,IAKAG,EAAW3D,iBAAiB,SAAS,WACnCJ,EAAUgE,GACVlC,EAAgBgC,EAAcjD,GAC9BiD,EAAamD,OACf,IAuBAnD,EAAa1D,iBAAiB,UApB9B,SAAwBT,GACtBA,EAAIwH,iBACJnE,EAAcc,EAAc,EAAM,iBAClC,IAAMgB,EAAW,CAAC,EAClBA,EAAS7D,KAAO6C,EAAagD,SAAS,cAAcC,MACpDjC,EAASY,KAAO5B,EAAagD,SAASpB,KAAKqB,MFrH7C,SAAsBjC,GACpB,OAAOsB,MAAM,GAADrF,OAAIsB,EAAOC,QAAO,UAAU,CACtC+D,OAAQ,OACR9D,QAASF,EAAOE,QAChB6E,KAAMC,KAAKC,UAAU,CACnBrG,KAAM6D,EAAS7D,KACfyE,KAAMZ,EAASY,SAGlBY,MAAK,SAAC5D,GACL,OAAOD,EAAeC,EACxB,GACF,CE0GEkF,CAAY9C,GACXwB,MAAK,SAACuB,GACLhD,EAAWgD,EAAMlD,EAAUmD,IAC3BjI,EAAWmE,EACb,IACCwC,OAAM,SAACC,GACNC,MAAMD,GACNE,QAAQC,IAAIH,EACd,IACCe,SAAQ,WACPxE,EAAcc,EAAc,EAAO,YACrC,GACF,IH7HA,SAA2BjD,GACRmB,MAAMC,KAAKnC,SAASoC,iBAAiBrB,EAAiB6D,eAC9DtC,SAAQ,SAACzB,IAxBpB,SAA4BA,EAAaE,GACvC,IAAMS,EAAYU,MAAMC,KAAKtB,EAAYuB,iBAAiBrB,EAAiBsB,gBACrEZ,EAAgBZ,EAAYZ,cAAcc,EAAiBkB,sBACjEV,EAAkBC,EAAWC,EAAeV,GAC5CS,EAAUc,SAAQ,SAACxB,GACjBA,EAAaR,iBAAiB,SAAS,YAnC3C,SAA6BO,EAAaC,EAAcC,GAClDD,EAAaa,SAASsG,gBACxBnH,EAAaoH,kBAAkBpH,EAAaqH,QAAQC,cAEpDtH,EAAaoH,kBAAkB,IAG5BpH,EAAaa,SAASC,MAGzBhB,EAAeC,EAAaC,EAAcC,GAxB9C,SAAyBF,EAAaC,EAAcsH,EAAcrH,GAChE,IAAMC,EAAeH,EAAYZ,cAAc,GAADgB,OAAIF,EAAiBG,qBAAmBD,OAAGH,EAAaK,OACtGL,EAAaV,UAAUC,IAAIU,EAAiBK,iBAC5CJ,EAAaK,YAAc+G,EAC3BpH,EAAaZ,UAAUC,IAAIU,EAAiBO,WAC9C,CAiBI+G,CAAexH,EAAaC,EAAcA,EAAawH,kBAAmBvH,EAI9E,CAwBMwH,CAAmB1H,EAAaC,EAAcC,GAC9CQ,EAAkBC,EAAWC,EAAeV,EAC9C,GACF,GACF,EAeIyH,CAAkB3H,EAAaE,GAC/BF,EAAYP,iBAAiB,UAAU,SAAUT,GAC/CA,EAAIwH,gBACN,GACF,GACF,CGiIAoB,CAAiB1H,GAcjBgC,QAAQ2F,IAAI,CFxMHpC,MAAM,GAADrF,OAAIsB,EAAOC,QAAO,aAAa,CACzCC,QAASF,EAAOE,UAEjB+D,MAAK,SAAC5D,GACL,OAAOD,EAAeC,EACxB,IAIO0D,MAAM,GAADrF,OAAIsB,EAAOC,QAAO,UAAU,CACtCC,QAASF,EAAOE,UAEjB+D,MAAK,SAAC5D,GACL,OAAOD,EAAeC,EACxB,ME2LD4D,MAAK,SAAAmC,GAAuB,IAPAC,EAAW3D,E,IAOX4D,G,EAAA,E,4CAAAF,I,o2BAArBG,EAAQD,EAAA,GAAEE,EAAKF,EAAA,GACrBhE,EAAUmD,GAAKc,EAAS7C,IAd1B,SAAyB+C,EAAUC,EAAWC,EAAYJ,GACxDE,EAAS3H,YAAcyH,EAAS3H,KAChC8H,EAAU5H,YAAcyH,EAASjB,MACjCqB,EAAWzB,MAAQ,yBAAHxG,OAA4B6H,EAAS1B,OAAM,IAC7D,CAWE+B,CAAexF,EAAaC,EAAoBC,EAAeiF,GATpCF,EAURG,EAVmB9D,EAUZ6D,EAAS7C,IATnC2C,EAAUQ,UAAU9G,SAAQ,SAACyF,GAC3BhD,EAAWgD,EAAM9C,EACnB,GAQF,IACCyB,OAAM,SAACC,GACNC,MAAMD,GACNE,QAAQC,IAAIH,EACd,G","sources":["webpack://mesto-project-ff/./src/scripts/components/modal.js","webpack://mesto-project-ff/./src/scripts/components/card.js","webpack://mesto-project-ff/./src/scripts/components/validation.js","webpack://mesto-project-ff/./src/scripts/components/api.js","webpack://mesto-project-ff/./src/scripts/components/utils.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["function handleEscape (evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const popupIsOpened = document.querySelector(\".popup_is-opened\");\r\n    closePopup(popupIsOpened);\r\n  }\r\n}\r\n\r\n//Открытие попапа\r\nfunction openPopup (popup) {\r\n  popup.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", handleEscape);\r\n}\r\n\r\n//Закрытие попапа\r\nfunction closePopup (popup) {\r\n  popup.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", handleEscape);\r\n}\r\n\r\nexport {openPopup, closePopup};","function createCard(cardTemplate, cardData, userId, onDeleteCard, likeBtnHandler, clickImageHandler) {\r\n  const cardElement = cardTemplate.querySelector(\".card\");\r\n  const cardCopy = cardElement.cloneNode(true);\r\n  const buttonDelete = cardCopy.querySelector(\".card__delete-button\");\r\n  const cardCopyImage = cardCopy.querySelector(\".card__image\");\r\n  const likeBtn = cardCopy.querySelector(\".card__like-button\");\r\n  const likeCounter = cardCopy.querySelector(\".card__like-counter\");\r\n\r\n  cardCopyImage.src = cardData.link;\r\n  cardCopyImage.alt = cardData.name;\r\n  cardCopy.querySelector(\".card__title\").textContent = cardData.name;\r\n  likeCounter.textContent = cardData.likes.length;\r\n\r\n  if (userId === cardData.owner._id) {\r\n    buttonDelete.addEventListener(\"click\", () => {\r\n      onDeleteCard(cardCopy);\r\n    });\r\n  } else {\r\n    buttonDelete.remove()\r\n  }\r\n\r\n  if (cardData.likes.some((like) => like._id === userId)){\r\n    toggleLikeState(likeBtn);\r\n  }\r\n  likeBtn.addEventListener(\"click\", () => {\r\n    likeBtnHandler(likeBtn, likeCounter);\r\n  });\r\n\r\n  cardCopyImage.addEventListener('click', clickImageHandler);\r\n\r\n  return cardCopy;\r\n}\r\n\r\n// Функция удаления карточки из разметки\r\nfunction  deleteCardFromDOM (card) {\r\n  card.remove();\r\n}\r\n\r\n//Обработчик лайка\r\nfunction toggleLikeState (likeBtn) {\r\n  likeBtn.classList.toggle(\"card__like-button_is-active\");\r\n}\r\n\r\nexport {createCard, deleteCardFromDOM, toggleLikeState};","function showInputError (formElement, inputElement, errorMessage, validationConfig) {\r\n  const errorElement = formElement.querySelector(`${validationConfig.inputErrorTypeClass}${inputElement.name}`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n}\r\n\r\nfunction hideInputError (formElement, inputElement, validationConfig) {\r\n  const errorElement = formElement.querySelector(`${validationConfig.inputErrorTypeClass}${inputElement.name}`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.textContent = '';\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n}\r\n\r\nfunction checkInputValidity (formElement, inputElement, validationConfig) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n}\r\n\r\nfunction hasInvalidInput (inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  })\r\n}\r\n\r\nfunction toggleButtonState (inputList, buttonElement, validationConfig) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n}\r\n\r\nfunction setEventListeners (formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}\r\n\r\nfunction clearValidation (formElement, validationConfig) {\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  });\r\n  buttonElement.disabled = true;\r\n  buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n}\r\n\r\nfunction enableValidation (validationConfig) {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n  })\r\n}\r\n\r\nexport {clearValidation, enableValidation};","const config = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-10',\r\n  headers: {\r\n    authorization: '459f3f15-9abd-42cb-bef4-24dbba45bbab',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nfunction checkResStatus (res) {\r\n  if (res.ok) {\r\n    return (res.json());\r\n  } else {\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n}\r\n\r\nfunction getUserInfo () {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    return checkResStatus(res);\r\n  })\r\n}\r\n\r\nfunction getInitialCards () {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    return checkResStatus(res);\r\n  })\r\n}\r\n\r\nfunction sendProfileChanges (newName, newDescription) {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: newName,\r\n      about: newDescription\r\n    })\r\n  })\r\n  .then((res) => {\r\n    return checkResStatus(res);\r\n  })\r\n}\r\n\r\nfunction changeAvatar (avatar) {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar\r\n    })\r\n  })\r\n  .then((res) => {\r\n    return checkResStatus(res);\r\n  })\r\n}\r\n\r\nfunction postNewCard (cardData) {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: cardData.name,\r\n      link: cardData.link\r\n    })\r\n  })\r\n  .then((res) => {\r\n    return checkResStatus(res);\r\n  })\r\n}\r\n\r\nfunction deleteCard (cardId) {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    return checkResStatus(res);\r\n  })\r\n}\r\n\r\nfunction likeCard (cardId) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    return checkResStatus(res);\r\n  })\r\n}\r\n\r\nfunction dislikeCard (cardId) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    return checkResStatus(res);\r\n  })\r\n}\r\n\r\nexport {getUserInfo, getInitialCards, sendProfileChanges, postNewCard, deleteCard, likeCard, dislikeCard, changeAvatar};","function renderLoading (form, isLoading, message) {\r\n  if (isLoading) {\r\n    form.querySelector(\".popup__button\").textContent = message;\r\n  } else {\r\n    form.querySelector(\".popup__button\").textContent = message;\r\n  }\r\n} \r\n\r\nexport {renderLoading};","import '../pages/index.css';\r\nimport {openPopup, closePopup} from './components/modal.js';\r\nimport {createCard, deleteCardFromDOM, toggleLikeState} from './components/card.js';\r\nimport {clearValidation, enableValidation} from './components/validation.js';\r\nimport {getUserInfo, getInitialCards, sendProfileChanges, postNewCard, deleteCard, likeCard, dislikeCard, changeAvatar} from './components/api.js';\r\nimport {renderLoading} from './components/utils.js';\r\n\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\nconst cardsContainer = document.querySelector(\".places__list\");\r\nconst profileEditBtn = document.querySelector(\".profile__edit-button\");\r\nconst popupEditProfile = document.querySelector(\".popup_type_edit\");\r\nconst profileName = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileAvatar = document.querySelector(\".profile__image\");\r\nconst editProfileForm = document.forms[\"edit-profile\"];\r\nconst newPlaceForm = document.forms[\"new-place\"];\r\nconst cardAddBtn = document.querySelector(\".profile__add-button\");\r\nconst popupAddCard = document.querySelector(\".popup_type_new-card\");\r\nconst popups = Array.from(document.querySelectorAll(\".popup\"));\r\nconst popupImage = document.querySelector(\".popup_type_image\");\r\nconst image = popupImage.querySelector(\".popup__image\");\r\nconst caption = popupImage.querySelector(\".popup__caption\");\r\nconst popupConfirm = document.querySelector(\".popup_type_confirm\");\r\nconst popupConfirmForm = popupConfirm.querySelector(\".popup__form\");\r\nconst avatarEditBtn = document.querySelector(\".profile__image-edit-button\");\r\nconst popupNewAvatar = document.querySelector(\".popup_type_new-avatar\");\r\nconst newAvatarForm = popupNewAvatar.querySelector(\".popup__form\");\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_inactive',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  inputErrorTypeClass: '.popup__input-error_type_',\r\n  errorClass: 'popup__input-error_active'\r\n};\r\nlet userCache = {};\r\nlet cardCache = {};\r\n\r\n//Обработчик закрытия попапов\r\npopups.forEach((popup) => {\r\n  popup.addEventListener('mousedown', (evt) => {\r\n    if (evt.target.classList.contains(\"popup_is-opened\")) {\r\n      closePopup(popup);\r\n    }\r\n    if (evt.target.classList.contains(\"popup__close\")) {\r\n      closePopup(popup);\r\n    }\r\n  })\r\n})\r\n\r\n//Открытие/закрытие попапа редактирования профиля\r\nprofileEditBtn.addEventListener('click', () => {\r\n  openPopup(popupEditProfile);\r\n  clearValidation(editProfileForm, validationConfig);\r\n  editProfileForm.elements.name.value = profileName.textContent;\r\n  editProfileForm.elements.description.value = profileDescription.textContent;\r\n})\r\n\r\n//Попап редактирования аватарки\r\navatarEditBtn.addEventListener('click', () => {\r\n  openPopup(popupNewAvatar);\r\n  newAvatarForm.reset();\r\n  clearValidation(newAvatarForm, validationConfig);\r\n})\r\n\r\n//Обработчик изменения аватарки\r\nnewAvatarForm.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(newAvatarForm, true, 'Сохранение...');\r\n  changeAvatar(newAvatarForm.elements.avatar.value)\r\n  .then((res) => {\r\n    profileAvatar.style = `background-image: url(${res.avatar})`;\r\n    closePopup(popupNewAvatar);\r\n  })\r\n  .catch((err) => {\r\n    alert(err);\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    renderLoading(newAvatarForm, false, 'Сохранить');\r\n  })\r\n})\r\n\r\n//Обработчик подтверждения удаления\r\npopupConfirmForm.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(popupConfirmForm, true, 'Удаляется...');\r\n  deleteCard(cardCache._id)\r\n  .then(() => {\r\n    deleteCardFromDOM(cardCache.cardCopy);\r\n  })\r\n  .then(() => {\r\n    closePopup(popupConfirm);\r\n  })\r\n  .catch((err) => {\r\n    alert(err);\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    renderLoading(popupConfirmForm, false, 'Да');\r\n  })\r\n})\r\n\r\n//Рендер карточки\r\nfunction renderCard (cardData, userId) {\r\n  cardsContainer.prepend(\r\n    createCard(\r\n      cardTemplate,\r\n      cardData,\r\n      userId,\r\n      (cardCopy) => {\r\n        cardCache._id = cardData._id;\r\n        cardCache.cardCopy = cardCopy;\r\n        openPopup(popupConfirm);\r\n      },\r\n      (likeBtn, likeCounter) => {\r\n        if (!likeBtn.classList.contains(\"card__like-button_is-active\")) {\r\n          likeCard(cardData._id)\r\n          .then((res) => {\r\n            likeCounter.textContent = res.likes.length;\r\n            toggleLikeState(likeBtn);\r\n          })\r\n          .catch((err) => {\r\n            alert(err);\r\n            console.log(err);\r\n          });\r\n        } else {\r\n          dislikeCard(cardData._id)\r\n          .then ((res) => {\r\n            likeCounter.textContent = res.likes.length;\r\n            toggleLikeState(likeBtn);\r\n          })\r\n          .catch((err) => {\r\n            alert(err);\r\n            console.log(err);\r\n          });\r\n        }\r\n        },\r\n        clickImageHandler\r\n    )\r\n  );\r\n}\r\n\r\n//Сабмит изменений в профиле\r\nfunction handleEditSubmit(evt) {\r\n  evt.preventDefault();\r\n  renderLoading(editProfileForm, true, 'Сохранение...');\r\n  sendProfileChanges(editProfileForm.elements.name.value, editProfileForm.elements.description.value)\r\n  .then(() => {\r\n    profileName.textContent = editProfileForm.elements.name.value;\r\n    profileDescription.textContent = editProfileForm.elements.description.value;\r\n    closePopup(popupEditProfile);\r\n  })\r\n  .catch((err) => {\r\n    alert(err);\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    renderLoading(editProfileForm, false, 'Сохранить');\r\n  })\r\n}\r\n\r\neditProfileForm.addEventListener('submit', handleEditSubmit);\r\n\r\n//Открытие/закрытие попапа добавления карточки\r\ncardAddBtn.addEventListener('click', () => {\r\n  openPopup(popupAddCard);\r\n  clearValidation(newPlaceForm, validationConfig);\r\n  newPlaceForm.reset();\r\n})\r\n\r\n//Сабмит новой карточки\r\nfunction submitNewCard (evt) {\r\n  evt.preventDefault();\r\n  renderLoading(newPlaceForm, true, 'Сохранение...');\r\n  const cardData = {};\r\n  cardData.name = newPlaceForm.elements[\"place-name\"].value;\r\n  cardData.link = newPlaceForm.elements.link.value;\r\n  postNewCard(cardData)\r\n  .then((card) => {\r\n    renderCard(card, userCache.id);\r\n    closePopup(popupAddCard);\r\n  })\r\n  .catch((err) => {\r\n    alert(err);\r\n    console.log(err);\r\n  })\r\n  .finally(() => {\r\n    renderLoading(newPlaceForm, false, 'Сохранить');\r\n  })\r\n}\r\n\r\nnewPlaceForm.addEventListener('submit', submitNewCard);\r\n\r\n//Обработчик клика по изображению\r\nfunction clickImageHandler(evt) {\r\n  openPopup(popupImage);\r\n  image.src = evt.target.src;\r\n  image.alt = evt.target.alt;\r\n  caption.textContent = evt.target.alt;\r\n}\r\n\r\nenableValidation(validationConfig);\r\n\r\nfunction renderUserInfo (userName, userAbout, userAvatar, userData) {\r\n  userName.textContent = userData.name;\r\n  userAbout.textContent = userData.about;\r\n  userAvatar.style = `background-image: url(${userData.avatar})`;\r\n}\r\n\r\nfunction renderInitialCards (cardsList, userId) {\r\n  cardsList.reverse().forEach((card) => {\r\n    renderCard(card, userId);\r\n  })\r\n}\r\n\r\nPromise.all([getUserInfo(), getInitialCards()])\r\n.then(([userData, cards]) => {\r\n  userCache.id = userData._id;\r\n  renderUserInfo(profileName, profileDescription, profileAvatar, userData);\r\n  renderInitialCards(cards, userData._id);\r\n})\r\n.catch((err) => {\r\n  alert(err);\r\n  console.log(err);\r\n});"],"names":["handleEscape","evt","key","closePopup","document","querySelector","openPopup","popup","classList","add","addEventListener","remove","removeEventListener","toggleLikeState","likeBtn","toggle","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","inputErrorTypeClass","name","inputErrorClass","textContent","errorClass","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","submitButtonSelector","Array","from","querySelectorAll","inputSelector","forEach","config","baseUrl","headers","authorization","checkResStatus","res","ok","json","Promise","reject","status","renderLoading","form","isLoading","message","cardTemplate","content","cardsContainer","profileEditBtn","popupEditProfile","profileName","profileDescription","profileAvatar","editProfileForm","forms","newPlaceForm","cardAddBtn","popupAddCard","popups","popupImage","image","caption","popupConfirm","popupConfirmForm","avatarEditBtn","popupNewAvatar","newAvatarForm","formSelector","userCache","cardCache","renderCard","cardData","userId","prepend","onDeleteCard","likeBtnHandler","clickImageHandler","cardCopy","cloneNode","buttonDelete","cardCopyImage","likeCounter","src","link","alt","likes","length","owner","_id","like","createCard","cardId","contains","fetch","method","then","dislikeCard","catch","err","alert","console","log","target","elements","value","description","reset","avatar","preventDefault","body","JSON","stringify","style","finally","newName","newDescription","about","postNewCard","card","id","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref","cardsList","_ref2","userData","cards","userName","userAbout","userAvatar","renderUserInfo","reverse"],"sourceRoot":""}